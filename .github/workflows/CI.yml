name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Bats
      uses: addnab/docker-run-action@v3
      with:
        image: bats/bats:latest
        options: -v ${{ github.workspace }}:/code
        run: find test/ -type f -name '*.bats' -not -regex 'test/helpers/mocks/.*' -exec bash -c 'bats -j 4 --no-parallelize-within-files "$@"' {} +

  test-macos:
    name: Test (Mac OS' builtin bash)
    runs-on: macos-latest

    steps:
    - name: Check bash version
      run: /usr/bin/env bash -c '[[ "$BASH_VERSION" < '4' ]]'

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        brew update
        brew install coreutils findutils parallel bats-core

    - name: Bats
      run: gfind test/ -type f -name '*.bats' -not -regex 'test/helpers/mocks/.*' -exec bash -c 'bats -j 4 --no-parallelize-within-files "$@"' {} +

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: ShellCheck
      uses: ludeeus/action-shellcheck@master
      with:
        scandir: './lib'
        additional_files: setup.sh test.sh
        check_together: 'yes'

    - name: shfmt
      uses: addnab/docker-run-action@v3
      with:
        image: mvdan/shfmt:v3-alpine
        options: -v ${{ github.workspace }}:/code
        run: shfmt -i 2 -ci -bn -d /code/lib/
